services:
  db:
    image: postgres:17.0
    container_name: social-network-db
    restart: always
    networks:
      network:
        aliases:
          - ${POSTGRES_HOST}
    # volumes:
    #   - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
  api:
    build: 
      context: backend
    container_name: social-network-api
    restart: always
    networks:
      network:
        aliases:
          - api
    command: bash -c "
      
      python manage.py makemigrations && 
      python manage.py migrate && 
      python manage.py createsuperuser --noinput && 
      python -m debugpy --listen 0.0.0.0:5678 manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    ports:
      - "8000:${API_PORT}"
      - "5678:${API_DEBUG_PORT}"
    environment:
      - POSTGRES_NAME
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_HOST
      - POSTGRES_PORT
      - DJANGO_SUPERUSER_USERNAME
      - DJANGO_SUPERUSER_PASSWORD
      - DJANGO_SUPERUSER_EMAIL
    depends_on:
      - db
  frontend:
    build: 
      context: frontend
    container_name: social-network-frontend
    restart: always
    networks:
      network:
        aliases:
          - frontend
    command: bash -c "yarn dev"
    volumes:
      - ./frontend:/app
    ports:
      - "3000:${FRONTEND_PORT}"
    environment:
      - API_HOST
      - API_PORT
      - WATCHPACK_POLLING
    depends_on:
      - api
      - db

networks:
  network:
    name: social-network-network
    driver: bridge